{"version":3,"sources":["redux/authReducer.js","redux/sidebarReducer.js","redux/linksReducer.js","redux/appReducer.js","redux/redux-store.js","components/common/Navigation/Navigation.js","components/common/Navigation/NavigationContainer.js","components/Header/Header.js","components/Header/HeaderContainer.js","App.js","index.js","components/common/Preloader/Preloader.js","redux/profileReducer.js","api/api.js","assets/images/user-defualt-2.png","components/common/Preloader/preloader.module.css","components/common/Navigation/navigation.module.css","assets/images/logo.png","utilities/IdRandom.js","components/Header/header.module.css","redux/dialogsReducer.js","redux/usersReducer.js","assets/images/preloader.gif"],"names":["initState","id","email","login","isAuth","photo","flagLoading","captcha","err","set_user_data","type","data","set_user_avatar","stop_submit","got_user_data","dispatch","a","usersAPI","authMe","response","profileAPI","getProfile","dataProfile","photos","large","password","rememberMe","message","messages","resultCode","responseCaptcha","url","logout","then","authReducer","state","action","console","log","slideReducer","followers","to","text","count","massages","profile","navigation","name","linksReducer","initialized","appReducer","reducers","combineReducers","profilePage","profileReducer","messagesPage","dialogsReducer","sidebar","sidebarReducer","settingsOfLinks","usersPage","usersReducer","auth","form","formReducer","app","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","window","Navigation","props","className","style","map","link","key","idRandom","onClick","e","updateProfile","NavigationURLContainer","target","textContent","got_profile_user","this","React","Component","connect","profileInfo","Header","header","container","src","logo","userLogin","userName","userImg","imgUserDefault_1","btn","HeaderAPIContainer","HeaderContainer","ProfileContainer","lazy","DialogsContainer","LoginPage","FollowersContainer","App","initialize_app","NavigationContainer","path","render","fallback","Preloader","AppContainer","compose","promise","Promise","all","AppInit","basename","process","renderEntireTree","ReactDOM","StrictMode","document","getElementById","subscribe","wrapper","content","gifPreloader","width","ADD_POST","DEL_POST","postData","title","like","comments","hashtags","postImg","whoName","whoImg","time","status","add_post","post_title","post_img","post_whoName","post_whoImg","post_time","post_text","set_profile_user","toggle_preloader","set_profile_status","hrefID","userId","getProfileStatus","got_profile_status","put_profile_status","putProfileStatus","setProfileInfo","togglePreloader","setProfileStatus","filter","item","instance","axios","baseURL","withCredentials","headers","post","delete","get","getUsers","page","showUsers","follow","unfollow","put","module","exports","IdRandom","simbols","getRandomInt","max","Math","floor","random","i","length","dialogsData","lastText","img","dataMessages","me","add_message","addMessage","users","totalUsers","isDisabledArr","isPreloader","set_page","current","toggle_btn_disabled","isProgressing","items","total","totalCount","followUnfollowLogic","bool","user","followed"],"mappings":"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","file":"static/js/main.9fa5d6bd.chunk.js","sourcesContent":["import { stopSubmit } from \"redux-form\";\r\nimport {profileAPI, usersAPI} from \"../api/api\";\r\n// TASKS FOR THIS COMPONENT\r\n// If it is wrong password need to clear input contains password.\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA'\r\nconst SET_USER_AVATAR = 'auth/SET_USER_AVATAR'\r\nconst CAPTCH = 'auth/CAPTCH'\r\nconst STOP_SUBMIT = 'auth/STOP_SUBMIT'\r\n\r\nconst initState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    photo: null,\r\n    flagLoading: false, \r\n    captcha: null,\r\n    err: null\r\n}\r\nconst authReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data,\r\n               isAuth: action.data.login ? true : false,\r\n               captcha: null\r\n            }\r\n        case SET_USER_AVATAR:\r\n            return {\r\n                ...state,\r\n                photo: action.photo\r\n            }\r\n        case CAPTCH:\r\n            return {\r\n                ...state,\r\n                captcha: action.url\r\n            }\r\n        case STOP_SUBMIT: {\r\n            console.log('Попали');\r\n            return {\r\n                ...state,\r\n                err: action.err\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const set_user_data = (id, email, login) => ({type: SET_USER_DATA, data: {id, email, login}})\r\nexport const set_user_avatar = (photo) => ({type: SET_USER_AVATAR, photo})\r\n\r\nexport const stop_submit = (err) => ({type: STOP_SUBMIT, err})\r\nconst set_captcha = (url) => ({type: CAPTCH, url})\r\n\r\n//thunks\r\nexport const got_user_data = (isAuth) => async (dispatch) => {\r\n    const response = await usersAPI.authMe()\r\n    let {id, email, login} = response.data\r\n    dispatch(set_user_data(id, email, login))\r\n    if(isAuth){\r\n        const dataProfile = await profileAPI.getProfile(id)\r\n        dispatch(set_user_avatar(dataProfile.photos.large))\r\n    }\r\n    return response\r\n}\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    const response = await usersAPI.login(email, password, rememberMe, captcha)\r\n    const message = response.messages\r\n\r\n    switch (response.resultCode){\r\n        case 0: {\r\n            dispatch(stop_submit(null))\r\n            dispatch(got_user_data(true))\r\n            break;\r\n        }\r\n        case 10: {\r\n            dispatch(stop_submit('Error login or password'))\r\n\r\n            const responseCaptcha = await usersAPI.captcha()\r\n            dispatch(set_captcha(responseCaptcha.url))\r\n            dispatch(stop_submit(null))\r\n            break;\r\n        }\r\n        case 1: {\r\n            dispatch(stop_submit(message))\r\n            break;\r\n        }\r\n    }\r\n}\r\n\r\nexport const logout = () => (dispatch) => {\r\n    usersAPI.logout().then((response) => {\r\n        if (response.resultCode === 0) {\r\n            dispatch(set_user_data(null, null, null))\r\n        }\r\n    })\r\n}\r\n\r\nexport default authReducer","let initState = {}\r\nconst slideReducer = (state = initState, action) => {\r\n    return state\r\n}\r\nexport default slideReducer;","let initState = {\r\n    followers: [{\r\n            to: '/followers/all',\r\n            text: 'Followers',\r\n            count: 123\r\n        },\r\n        {\r\n            to: '/followers/online',\r\n            text: 'Online',\r\n            count: 12\r\n        },\r\n        {\r\n            to: '/followers/find',\r\n            text: 'Find people',\r\n            count: null\r\n        },\r\n    ],\r\n    massages: [{\r\n            to: '/messages/chats',\r\n            text: 'Chats',\r\n            count: 2\r\n        },\r\n        {\r\n            to: '/messages/status',\r\n            text: 'Status',\r\n            count: 2\r\n        },\r\n    ],\r\n    profile: [{\r\n            to: '/profile/overview',\r\n            text: 'OVERVIEW'\r\n        },\r\n        {\r\n            to: '/profile/posts',\r\n            text: 'POSTS',\r\n            count: 2\r\n        },\r\n        // {\r\n        //     to: '/profile/friends',\r\n        //     text: 'FRIENDS',\r\n        //     count: 20\r\n        // },\r\n        {\r\n            to: '/profile/followers',\r\n            text: 'FOLLOWERS',\r\n            count: 7\r\n        },\r\n        {\r\n            to: '/profile/music',\r\n            text: 'MUSIC',\r\n            count: 14\r\n        },\r\n    ],\r\n    navigation: [\r\n        {to: '/profile/overview', name: 'My profile'},\r\n        {to: '/messages/chats', name: 'Messenger'},\r\n        {to: '/followers/all', name: 'Followers'},\r\n        {to: '/news', name: 'News'},\r\n        {to: '/music', name: 'Music'},\r\n        {to: '/settings', name: 'Settings'},\r\n    ]\r\n}\r\nconst linksReducer = (state = initState, action) => {\r\n    return state\r\n}\r\nexport default linksReducer","import {got_user_data} from \"./authReducer\";\r\n\r\nconst INITIALIZED = 'app/INITIALIZED'\r\n\r\n\r\nconst initState = {\r\n    initialized: false,\r\n}\r\nconst appReducer = (state = initState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//action creators\r\nexport const init_success = () => ({type: INITIALIZED})\r\n\r\nexport const initialize_app = (auth) => (dispatch) => {\r\n    let promise = dispatch(got_user_data(auth))\r\n    Promise.all([promise]).then(() => {\r\n        dispatch(init_success())\r\n    })\r\n}\r\n\r\nexport default appReducer","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profileReducer\";\r\nimport dialogsReducer from \"./dialogsReducer\";\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport linksReducer from \"./linksReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport authReducer from \"./authReducer\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./appReducer\";\r\nimport {composeWithDevTools} from \"redux-devtools-extension\";\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    settingsOfLinks: linksReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n})\r\nlet store = createStore(reducers, composeWithDevTools(applyMiddleware(thunkMiddleware)))\r\n\r\nwindow.store = store\r\nexport default store\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport style from './navigation.module.css';\r\nimport idRandom from '../../../utilities/IdRandom'\r\n\r\n\r\nconst Navigation = (props) => (\r\n    <nav className={style.navigation}>\r\n      <ul>\r\n        {props.navigation.map(link => {\r\n          return (\r\n              <li key={idRandom()}>\r\n                <NavLink \r\n                  className={style.link} \r\n                  to={link.to} \r\n                  onClick={(e) => props.updateProfile(e)}\r\n                  >{link.name}</NavLink>\r\n              </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </nav>\r\n);\r\nexport default Navigation;","import React from \"react\";\r\nimport Navigation from \"./Navigation\";\r\nimport {connect} from \"react-redux\";\r\nimport {got_profile_user} from \"../../../redux/profileReducer\";\r\nclass NavigationURLContainer extends React.Component{\r\n    updateProfile = (e) => {\r\n        if (!this.props.isAuth) {\r\n            return\r\n        }\r\n        if (this.props.isAuth && e.target.textContent === 'My profile') {\r\n            this.props.got_profile_user(false)\r\n        }\r\n    }\r\n    render(){\r\n        return (\r\n                <Navigation\r\n                    {...this.props}\r\n                    updateProfile={this.updateProfile}/>\r\n            )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        navigation: state.settingsOfLinks.navigation,\r\n        profileInfo: state.profilePage.profileInfo,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {got_profile_user})(NavigationURLContainer)","import React from 'react';\r\nimport style from './header.module.css';\r\nimport logo from '../../assets/images/logo.png'\r\nimport imgUserDefault_1 from \"../../assets/images/user-defualt-2.png\";\r\nimport {Redirect, NavLink, Link} from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n    console.log(props);\r\n    if (props.isAuth) {\r\n        return (\r\n            <header className={style.header}>\r\n                <div className={style.container}>\r\n                    <img src={logo} className={style.logo}/>\r\n                    <div>\r\n                        <NavLink to={'/'} className={style.userLogin}>\r\n                            <div className={style.userName}>\r\n                                {props.login}\r\n                            </div>\r\n                            <div className={style.userImg}>\r\n                                <img src={props.photo  ?\r\n                                    props.photo :\r\n                                    imgUserDefault_1}/>\r\n                            </div>\r\n                        </NavLink>\r\n                        <button\r\n                            className={style.btn} \r\n                            onClick={() => {\r\n                                props.logout()\r\n                            }}>Log Out\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </header>\r\n        )\r\n    }\r\n    return (<header className={style.header}>\r\n        <div className={style.container}>\r\n            <img src={logo} className={style.logo}/>\r\n            <NavLink to={'/'}>\r\n                <div className={style.userLogin}>\r\n                    <div className={style.userName}>\r\n                        Login\r\n                    </div>\r\n                    <div className={style.userImg}>\r\n                        <img src={props.photo  ?\r\n                            props.photo :\r\n                            imgUserDefault_1}/>\r\n                    </div>\r\n                </div>\r\n            </NavLink>\r\n        </div>\r\n    </header>)\r\n}\r\nexport default Header;","import React from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {logout, set_user_avatar, set_user_data} from \"../../redux/authReducer\";\r\n\r\nclass HeaderAPIContainer extends React.Component{\r\n    // componentDidMount(){\r\n    //     this.props.got_user_data(this.props.isAuth)\r\n    // }\r\n    render(){\r\n        return (<Header {...this.props}/>)\r\n    }\r\n}\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n        login: state.auth.login\r\n    }\r\n}\r\nconst HeaderContainer = \r\nconnect(mapStateToProps, {\r\n    set_user_data,\r\n    set_user_avatar,\r\n    logout\r\n})(HeaderAPIContainer);\r\n\r\nexport default HeaderContainer;\r\n","import React, {Suspense} from 'react';\nimport './App.css';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport {connect, Provider} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {initialize_app} from \"./redux/appReducer\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport store from \"./redux/redux-store.js\";\n\nimport NavigationContainer from \"./components/common/Navigation/NavigationContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContains'));\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/DialogsContainer'));\nconst LoginPage = React.lazy(() => import('./components/LoginPage/LoginPage'));\nconst FollowersContainer = React.lazy(() => import('./components/Followers/FollowersCotainer'));\n\nexport class App extends React.Component {\n  componentDidMount() {\n      this.props.initialize_app(this.props.isAuth)\n  }\n  render() {\n    if(!this.props.initialized){\n      return <Preloader/>\n    }\n    return(\n      <>\n          <HeaderContainer/>\n\n          <div className=\"app-wrapper container\">\n            <NavigationContainer/>\n            <div className=\"app-wrapper-content\">\n              <Route path=\"/profile\" render={\n                () => (\n                    <Suspense fallback={<Preloader />}>\n                        <ProfileContainer/>\n                    </Suspense>\n                    )\n              }/>\n              <Route path=\"/messages\" render={\n                () => (\n                    <Suspense fallback={<Preloader />}>\n                        <DialogsContainer/>\n                    </Suspense>\n                    )\n              }/>\n              <Route path=\"/followers\" render={\n                () => (\n                    <Suspense fallback={<Preloader />}>\n                        <FollowersContainer/>\n                    </Suspense>\n                    )\n              }/>\n              <Route path=\"/login\" render={\n                () => (\n                    <Suspense fallback={<Preloader />}>\n                        <LoginPage/>\n                    </Suspense>\n                    )\n              }/>\n            </div>\n          </div>\n    </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n    initialized: state.app.initialized\n  }\n}\nconst AppContainer =  compose(\n    connect(mapStateToProps, {\n        initialize_app,\n  }),\n)(App);\nexport const AppInit = () => {\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <Provider store={store}>\n                <AppContainer/>\n            </Provider>\n        </BrowserRouter>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport store from './redux/redux-store.js';\nimport {AppInit} from \"./App.js\";\n\nlet renderEntireTree = () => ReactDOM.render(\n  <React.StrictMode>\n      <AppInit/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nrenderEntireTree();\nstore.subscribe(renderEntireTree);\n\n\n","import React from 'react';\r\nimport style from './preloader.module.css'\r\nimport gifPreloader from '../../../assets/images/preloader.gif'\r\n\r\nconst Preloader = () => {\r\n    return (\r\n        <div className={style.wrapper}>\r\n            <div className={style.content}>\r\n                <img src={gifPreloader} style={{width: '100px'}}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Preloader","import {\r\n    usersAPI,\r\n    profileAPI\r\n} from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST'\r\nconst SET_PROFILE_USER = 'profile/SET_PROFILE_USER'\r\nconst TOGGLE_PRELOADER = 'profile/TOGGLE_PRELOADER'\r\nconst SET_PROFILE_STATUS = 'profile/SET_PROFILE_STATUS'\r\nconst DEL_POST = 'profile/DEL_POST'\r\n\r\nlet initState = {\r\n    postData: [\r\n        {\r\n            id: 1,\r\n            title: 'Первый',\r\n            text: 'Это мой первый пост',\r\n            like: 10,\r\n            comments: 2,\r\n            hashtags: ['#firstPost'],\r\n            postImg: 'https://cdn1.img.sputniknewslv.com/images/1318/02/13180226.jpg',\r\n            whoName: 'Max',\r\n            whoImg: 'https://sun9-64.userapi.com/gN79EhxURENQ4f55w6rPGIFdl0Hr_Q4X0BXS_Q/lJZxeSC7TGc.jpg',\r\n            time: '10 минут назад'\r\n        },\r\n        {\r\n            id: 2,\r\n            title: 'Классное',\r\n            text: 'Классная погодка, как вам, ребят?',\r\n            like: 10,\r\n            comments: 2,\r\n            hashtags: ['#firstPost', '#trr'],\r\n            whoName: 'Yulia',\r\n            whoImg: 'https://sun9-20.userapi.com/_xRHT4Cb7wdm028L5F7Ua7eTc7sFG4Coqnz40Q/Y9wkbsqGFgU.jpg',\r\n            time: '15 минут назад'\r\n        },\r\n    ],\r\n    profileInfo: null,\r\n    status: '',\r\n    flagLoading: false\r\n}\r\n\r\nconst profileReducer = (state = initState, action) => {\r\n    const setProfileInfo = (profileInfo) => {\r\n        return {\r\n            ...state, profileInfo\r\n        }\r\n    }\r\n    const togglePreloader = (flagLoading) => {\r\n        return {\r\n            ...state, flagLoading\r\n        }\r\n    }\r\n    const setProfileStatus = (status) => {\r\n        return {\r\n            ...state, status\r\n        }\r\n    }\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            return {\r\n                ...state,\r\n                postData: [{\r\n                    id: 1,\r\n                    title: action.post_title,\r\n                    text: action.post_text,\r\n                    like: 0,\r\n                    comments: 0,\r\n                    hashtags: ['#firstPost'],\r\n                    postImg: action.post_img,\r\n                    whoName: action.post_whoName,\r\n                    whoImg: action.post_whoImg,\r\n                    time: action.post_time,\r\n                }, ...state.postData],\r\n            }\r\n        case SET_PROFILE_USER:\r\n            return setProfileInfo(action.profileInfo)\r\n        case TOGGLE_PRELOADER:\r\n            return togglePreloader(action.flagLoading)\r\n        case SET_PROFILE_STATUS:\r\n            return setProfileStatus(action.status)\r\n        case DEL_POST:\r\n            return {\r\n                ...state,\r\n                postData: state.postData.filter(item => item.id != action.id)\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n//action creators\r\nexport const add_post = (   post_title, \r\n                            post_img, \r\n                            post_whoName, \r\n                            post_whoImg, \r\n                            post_time, \r\n                            post_text) =>  (\r\n                                \r\n                            {\r\n                                type: ADD_POST,\r\n                                post_title,\r\n                                post_img,\r\n                                post_whoName,\r\n                                post_whoImg,\r\n                                post_time,\r\n                                post_text\r\n                            }\r\n                        )\r\n\r\nexport const set_profile_user = (profileInfo) => ({type: SET_PROFILE_USER, profileInfo})\r\nexport const toggle_preloader = (flagLoading) => ({type: TOGGLE_PRELOADER, flagLoading})\r\nexport const set_profile_status = (status) => ({type: SET_PROFILE_STATUS, status})\r\nexport const del_post = (id) => ({type: DEL_POST, id})\r\n\r\n//thunks\r\nexport const got_profile_user = (hrefID) => (dispatch) => {\r\n    usersAPI.authMe().then((response) => {\r\n        let {id} = response.data\r\n        let userId = hrefID ? hrefID : id\r\n\r\n        // if(id !== userId) dispatch(toggle_preloader(true))\r\n        dispatch(toggle_preloader(true))\r\n        profileAPI.getProfile(userId)\r\n            .then((data) => {\r\n                dispatch(toggle_preloader(false))\r\n                dispatch(set_profile_user(data))\r\n            })\r\n        profileAPI.getProfileStatus(userId)\r\n            .then((status) => {\r\n                dispatch(set_profile_status(status))\r\n            })\r\n    })\r\n}\r\nexport const got_profile_status = (hrefID) => (dispatch) => {\r\n    usersAPI.authMe().then((response) => {\r\n        let {id} = response.data\r\n        let userId = hrefID ? hrefID : id\r\n\r\n        profileAPI.getProfileStatus(userId)\r\n            .then((status) => {\r\n                dispatch(set_profile_status(status))\r\n            })\r\n        })\r\n}\r\n\r\nexport const put_profile_status = (status) => (dispatch) => {\r\n        profileAPI.putProfileStatus(status)\r\n            .then((data) => {\r\n                if(data.resultCode === 0) dispatch(set_profile_status(status))\r\n            })\r\n}\r\n\r\nexport default profileReducer","import * as axios from \"axios\";\r\nconst API_KEY = 'aeafe9d5-1c2a-40f8-9e0c-40b9f734dfa2'\r\nconst instance = axios.create({\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    withCredentials: true,\r\n    headers: {\r\n        \"API-KEY\": API_KEY\r\n    }\r\n\r\n})\r\nexport const usersAPI = {\r\n    login(email, password, rememberMe = false, captcha = false) {\r\n        return instance.post('/auth/login', {email, password, rememberMe, captcha})\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data\r\n                }\r\n            })\r\n    },\r\n    logout() {\r\n        return instance.delete('/auth/login')\r\n            .then((response) => {\r\n                if (response.status === 200) {\r\n                    return response.data\r\n                }\r\n            })\r\n    },\r\n    authMe() {\r\n        return instance.get('auth/me')\r\n            .then((response) => {\r\n                if(response.status === 200) {\r\n                    return response.data\r\n                }\r\n            })\r\n    },\r\n    getUsers(page = 1, showUsers = 10) {\r\n        return instance.get(`users?page=${page}&count=${showUsers}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    follow(id){\r\n        return instance.post(`follow/${id}`,{})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    unfollow(id){\r\n        return instance.delete(`follow/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    captcha() {\r\n        return instance.get('security/get-captcha-url')\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return instance.get(`profile/${id}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getProfileStatus(id) {\r\n        return instance.get(`/profile/status/${id}`)\r\n            .then(response => {\r\n                if (response.status === 200){\r\n                    return response.data\r\n                }\r\n            })\r\n    },\r\n    putProfileStatus(status) {\r\n        return instance.put(`/profile/status`, {status})\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    }\r\n}\r\n\r\n","module.exports = __webpack_public_path__ + \"static/media/user-defualt-2.ded1dfef.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"preloader_wrapper__33Xod\",\"content\":\"preloader_content__HA9at\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navigation\":\"navigation_navigation__1YGwi\",\"link\":\"navigation_link__3NqFX\",\"active\":\"navigation_active__31NHx\"};","module.exports = __webpack_public_path__ + \"static/media/logo.479ecdb4.png\";","const IdRandom = (count=5) => {\r\n    let simbols =\r\n        ['a', 'b', 'c', 'd',\r\n            'e', 'f', 'g', 'h',\r\n            'i', 'j', 'k', 'l',\r\n            'm', 'n', 'o', 'p',\r\n            'q', 'r', 's', 't',\r\n            'u', 'v', 'w', 'x',\r\n            'y', 'z','-', '!',\r\n            '@', '$', '%', '/',\r\n            '*','&','^','<','>',\r\n            '~','#',':','?','.'];\r\n\r\n    function getRandomInt(max) {\r\n        return Math.floor(Math.random() * Math.floor(max));\r\n    }\r\n\r\n    let id = '';\r\n    for(let i = 0; i<=count; i++){\r\n        id+= simbols[getRandomInt(simbols.length)]\r\n    }\r\n    return id\r\n}\r\nexport default IdRandom","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__1JcQo\",\"container\":\"header_container__1wPdO\",\"logo\":\"header_logo__1BGPF\",\"userLogin\":\"header_userLogin__1wutl\",\"userImg\":\"header_userImg__3U4ni\",\"userName\":\"header_userName__39b_n\",\"btn\":\"header_btn__21H6V\"};","const ADD_MESSAGE = 'dialogs/ADD-MESSAGE'\r\n\r\nlet initState = {\r\n    dialogsData: [{\r\n        id: 1,\r\n        name: \"Kolia Pupkin\",\r\n        lastText: \"...bot\",\r\n        img: 'https://static10.tgstat.ru/channels/_0/49/49b77c2e60267e7b1e511c1084ed596e.jpg'\r\n    },\r\n        {\r\n            id: 2,\r\n            name: \"Anton Putin\",\r\n            lastText: \"...bot\",\r\n            img: 'https://seek-team-prod.s3.fr-par.scw.cloud/users/5f5f165654577674874172.jpg'\r\n        },\r\n    ],\r\n    dataMessages: [{\r\n            id: 1,\r\n            text: 'Hey',\r\n            time: '10:20',\r\n            img: 'https://static10.tgstat.ru/channels/_0/49/49b77c2e60267e7b1e511c1084ed596e.jpg',\r\n            me: false\r\n        },\r\n        {\r\n            id: 2,\r\n            text: 'Hey, dude!',\r\n            time: '10:25',\r\n            img: 'https://sun9-49.userapi.com/dj9EjEZYf_dAiW3T8Dxg1HVG2CxySACD-nuPDg/UoBLmZKdaXc.jpg',\r\n            me: true\r\n        },\r\n    ],\r\n}\r\n\r\nconst dialogsReducer = (state = initState, action) => {\r\n\r\n    const addMessage = (text) => {\r\n        return {    //Create new state\r\n            ...state,\r\n            dataMessages: [...state.dataMessages, {\r\n                id: 1,\r\n                text: text,\r\n                time: 'now',\r\n                img: 'https://sun9-49.userapi.com/dj9EjEZYf_dAiW3T8Dxg1HVG2CxySACD-nuPDg/UoBLmZKdaXc.jpg',\r\n                me: true,\r\n\r\n            }],\r\n        }\r\n    }\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n            return addMessage(action.text)\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport const add_message = (text) => ({\r\n    type: ADD_MESSAGE, text\r\n})\r\nexport default dialogsReducer","import {\r\n    usersAPI\r\n} from \"../api/api\";\r\n\r\nconst FOLLOW = 'user/FOLLOW'\r\nconst UNFOLLOW = 'user/UNFOLLOW'\r\nconst SET_USERS = 'user/SET_USERS'\r\nconst SET_TOTAL_USERS = 'user/SET_TOTAL_USERS'\r\nconst SET_PAGE = 'user/SET_PAGE'\r\nconst TOGGLE_PRELOADER = 'user/TOGGLE_PRELOADER'\r\nconst TOGGLE_BTN_DISABLED = 'user/TOGGLE_BTN_DISABLED'\r\n\r\nconst initState = {\r\n    users: [],\r\n    showUsers: 10,\r\n    totalUsers: null,\r\n    page: 1,\r\n    isDisabledArr: [],\r\n    isPreloader: false\r\n};\r\nconst usersReducer = (state = initState, action) => {\r\n    const followUnfollowLogic = (action, bool) => {\r\n        return [...state.users.map(user => {\r\n            if(user.id === action.userId){\r\n                return {...user, followed: bool}\r\n            }\r\n            return user\r\n        })\r\n        ]\r\n    }\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: followUnfollowLogic(action, true)\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: followUnfollowLogic(action, false)\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state, users: action.users\r\n            }\r\n        case SET_PAGE:\r\n            return {\r\n                ...state, page: action.current\r\n            }\r\n        case SET_TOTAL_USERS:\r\n            return {\r\n                ...state, totalUsers: action.total\r\n            }\r\n        case TOGGLE_PRELOADER:\r\n            return {\r\n                ...state, isPreloader: action.flagLoading\r\n            }\r\n        case TOGGLE_BTN_DISABLED:\r\n            return {\r\n                ...state,\r\n                isDisabledArr: action.isProgressing ? [...state.isDisabledArr, action.userId] :\r\n                    state.isDisabledArr.filter(id => action.userId != id)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n//actions creators\r\nexport const followSuccess = (userId) => ({ type: FOLLOW, userId })\r\nexport const unfollowSuccess = (userId) => ({ type: UNFOLLOW, userId })\r\nexport const set_users = (users) => ({ type: SET_USERS, users })\r\nexport const set_page = (current) => ({ type: SET_PAGE, current })\r\nexport const set_total_users = (total) => ({ type: SET_TOTAL_USERS, total })\r\nexport const toggle_preloader = (flagLoading) => ({ type: TOGGLE_PRELOADER, flagLoading })\r\nexport const toggle_btn_disabled = (isProgressing, userId) => ({ type: TOGGLE_BTN_DISABLED, isProgressing, userId })\r\n\r\n//thunks\r\nexport const getUsers = (page, showUsers) => async (dispatch) => {\r\n    dispatch(toggle_preloader(true))\r\n    const data = await usersAPI.getUsers(page, showUsers)\r\n    dispatch(toggle_preloader(false))\r\n    dispatch(set_users(data.items))\r\n    dispatch(set_total_users(data.totalCount))\r\n}\r\n\r\n\r\nexport const follow = (id) => async (dispatch) => {\r\n    dispatch(toggle_btn_disabled(true, id))\r\n    const data = await usersAPI.follow(id)\r\n    if(data.resultCode === 0) dispatch(followSuccess(id))\r\n    dispatch(toggle_btn_disabled(false, id))\r\n}\r\n\r\n\r\nexport const unfollow = (id) => async (dispatch) => {\r\n    dispatch(toggle_btn_disabled(true, id))\r\n    const data = await usersAPI.unfollow(id)\r\n    if(data.resultCode === 0) dispatch(unfollowSuccess(id))\r\n    dispatch(toggle_btn_disabled(false, id))\r\n}\r\n\r\nexport default usersReducer","module.exports = __webpack_public_path__ + \"static/media/preloader.1cf5a756.gif\";"],"sourceRoot":""}